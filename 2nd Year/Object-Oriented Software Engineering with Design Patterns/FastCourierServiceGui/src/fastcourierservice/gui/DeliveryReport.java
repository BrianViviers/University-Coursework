/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package fastcourierservice.gui;

import datamodel.CustomerList;
import datamodel.DeliveryStatus;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import observerpattern.IObserver;

/**
 *
 * @author Brian
 */
public class DeliveryReport extends javax.swing.JFrame implements IObserver {

    private CustomerList customers;
    private ArrayList<DeliveryStatus> delStatusList;
    private DeliveryReportType reportType;
    private FastCourierServiceGUI parentGUI;
    private DefaultComboBoxModel<DeliveryStatus> model;
    private DeliveryStatus filterStatus;

    /**
     * Creates new form DeliveryReport
     */
    public DeliveryReport() {
        initComponents();
    }

    public DeliveryReport(DeliveryReportType type, FastCourierServiceGUI gui) {
        this();
        setLocationRelativeTo(gui);
        customers = new CustomerList();
        reportType = type;
        parentGUI = gui;
        delStatusList = new ArrayList<>();
        model = new DefaultComboBoxModel<>();

        switch (this.reportType) {
            case AllDELIVERIES:
                lblHeading.setText("All Deliveries Report");
                delStatusList.addAll(Arrays.asList(DeliveryStatus.values()));
                break;
            case WORKINPROGRESS:
                lblHeading.setText("Work In Progress Report");
                delStatusList.add(DeliveryStatus.INTRANSIT);
                delStatusList.add(DeliveryStatus.DELIVERYREFUSED);
                delStatusList.add(DeliveryStatus.PENDINGCOLLECTION);
                break;
            case COMPLETED:
                lblHeading.setText("Completed Deliveries Report");
                delStatusList.add(DeliveryStatus.DELIVERED);
                delStatusList.add(DeliveryStatus.UNDELIVERABLE);
                break;
        }
        for (DeliveryStatus status : delStatusList) {
            model.addElement(status);
        }
        this.cbxFilterStatus.setModel(model);

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                callParentOnClose();
            }
        });
    }

    private void callParentOnClose() {
        this.customers.removeObserver(this);
        switch (this.reportType) {
            case AllDELIVERIES:
                parentGUI.setAllReport();
                break;
            case WORKINPROGRESS:
                parentGUI.setWIPReport();
                break;
            case COMPLETED:
                parentGUI.setCompleteReport();
                break;
        }
    }

    public void setCustomers(CustomerList customers) {
        if (null != this.customers) {
            this.customers.removeObserver(this);
            this.customers = null;
        }
        this.customers = customers;
        if (null != this.customers) {
            this.customers.registerObserver(this);
            this.update();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainWindow = new javax.swing.JPanel();
        scrDeliveries = new javax.swing.JScrollPane();
        tblDeliveries = new javax.swing.JTable();
        lblHeading = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        pnlSetStatus = new javax.swing.JPanel();
        chkCustWithDel = new javax.swing.JCheckBox();
        cbxFilterStatus = new javax.swing.JComboBox();
        lblFilterResults = new javax.swing.JLabel();
        chkEnableFilter = new javax.swing.JCheckBox();

        pnlMainWindow.setBackground(new java.awt.Color(199, 208, 213));

        tblDeliveries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDeliveries.setEnabled(false);
        scrDeliveries.setViewportView(tblDeliveries);

        lblHeading.setFont(new java.awt.Font("Garamond", 1, 34)); // NOI18N
        lblHeading.setForeground(new java.awt.Color(255, 90, 9));
        lblHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeading.setText("Name of Report goes here");

        jSeparator1.setForeground(new java.awt.Color(255, 153, 0));

        pnlSetStatus.setBackground(new java.awt.Color(147, 177, 198));

        chkCustWithDel.setBackground(new java.awt.Color(147, 177, 198));
        chkCustWithDel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkCustWithDel.setForeground(new java.awt.Color(255, 255, 255));
        chkCustWithDel.setText("Only show customers with deliveries");
        chkCustWithDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCustWithDelActionPerformed(evt);
            }
        });

        cbxFilterStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxFilterStatus.setEnabled(false);
        cbxFilterStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxFilterStatusActionPerformed(evt);
            }
        });

        lblFilterResults.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFilterResults.setForeground(new java.awt.Color(255, 255, 255));
        lblFilterResults.setText("Filter results by:");
        lblFilterResults.setEnabled(false);

        chkEnableFilter.setBackground(new java.awt.Color(147, 177, 198));
        chkEnableFilter.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkEnableFilter.setForeground(new java.awt.Color(255, 255, 255));
        chkEnableFilter.setText("Enable filtering");
        chkEnableFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEnableFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSetStatusLayout = new javax.swing.GroupLayout(pnlSetStatus);
        pnlSetStatus.setLayout(pnlSetStatusLayout);
        pnlSetStatusLayout.setHorizontalGroup(
            pnlSetStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSetStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSetStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSetStatusLayout.createSequentialGroup()
                        .addComponent(lblFilterResults)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlSetStatusLayout.createSequentialGroup()
                        .addGroup(pnlSetStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlSetStatusLayout.createSequentialGroup()
                                .addComponent(chkEnableFilter)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chkCustWithDel))
                            .addGroup(pnlSetStatusLayout.createSequentialGroup()
                                .addComponent(cbxFilterStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        pnlSetStatusLayout.setVerticalGroup(
            pnlSetStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSetStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSetStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCustWithDel)
                    .addComponent(chkEnableFilter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFilterResults)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbxFilterStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlMainWindowLayout = new javax.swing.GroupLayout(pnlMainWindow);
        pnlMainWindow.setLayout(pnlMainWindowLayout);
        pnlMainWindowLayout.setHorizontalGroup(
            pnlMainWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(scrDeliveries)
            .addGroup(pnlMainWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeading, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(pnlSetStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlMainWindowLayout.setVerticalGroup(
            pnlMainWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainWindowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHeading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSetStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scrDeliveries, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainWindow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkCustWithDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCustWithDelActionPerformed
        update();
    }//GEN-LAST:event_chkCustWithDelActionPerformed

    private void chkEnableFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEnableFilterActionPerformed
        if (chkEnableFilter.isSelected()) {
            this.lblFilterResults.setEnabled(true);
            this.cbxFilterStatus.setEnabled(true);
            filterStatus = model.getElementAt(cbxFilterStatus.getSelectedIndex());
            update();
        } else {
            this.lblFilterResults.setEnabled(false);
            this.cbxFilterStatus.setEnabled(false);
            filterStatus = null;
            update();
        }
    }//GEN-LAST:event_chkEnableFilterActionPerformed

    private void cbxFilterStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxFilterStatusActionPerformed
        filterStatus = model.getElementAt(cbxFilterStatus.getSelectedIndex());
        update();
    }//GEN-LAST:event_cbxFilterStatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveryReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveryReport().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbxFilterStatus;
    private javax.swing.JCheckBox chkCustWithDel;
    private javax.swing.JCheckBox chkEnableFilter;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblFilterResults;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JPanel pnlMainWindow;
    private javax.swing.JPanel pnlSetStatus;
    private javax.swing.JScrollPane scrDeliveries;
    private javax.swing.JTable tblDeliveries;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update() {
        Boolean minimalReport = false;
        if(chkCustWithDel.isSelected()) {
            minimalReport = true;
        }
         IPopulateReport popRep = new PopulateReport(tblDeliveries, customers, 
                 delStatusList, minimalReport, filterStatus);
         popRep.populateReport();
    }
}
